toolchain("gcc_toolchain") {
  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = "g++"
  strip = "strip"

  lib_switch = "-l"
  lib_dir_switch = "-L"

  extra_cflags = ""
  extra_cppflags = ""
  extra_cxxflags = ""

  # Object files go in this directory.
  object_subdir = "{{target_out_dir}}/{{label_name}}"

  tool("cc") {
    depfile = "{{output}}.d"
    command = "$cc -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}}${extra_cppflags}${extra_cflags} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CC {{output}}"
    outputs = [ "$object_subdir/{{source_name_part}}.o" ]
  }

  tool("cxx") {
    depfile = "{{output}}.d"
    command = "$cxx -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}}${extra_cppflags}${extra_cxxflags} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CXX {{output}}"
    outputs = [ "$object_subdir/{{source_name_part}}.o" ]
  }

  tool("asm") {
    # For GCC we can just use the C compiler to compile assembly.
    depfile = "{{output}}.d"
    command = "$cc -MMD -MF $depfile {{defines}} {{include_dirs}} {{asmflags}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "ASM {{output}}"
    outputs = [ "$object_subdir/{{source_name_part}}.o" ]
  }

  tool("alink") {
    rspfile = "{{output}}.rsp"
    command =
        "rm -f {{output}} && $ar {{arflags}} rcsD {{output}} @\"$rspfile\""
    description = "AR {{output}}"
    rspfile_content = "{{inputs}}"
    outputs = [
      "{{output_dir}}/{{target_output_name}}{{output_extension}}",
    ]
    default_output_dir = "{{target_out_dir}}"
    default_output_extension = ".a"
    output_prefix = "lib"
  }

  tool("solink") {
    outname = "{{target_output_name}}{{output_extension}}"
    outfile = "{{output_dir}}/$outname"
    rspfile = "$outfile.rsp"
    unstripped_outfile = "{{root_out_dir}}/lib.unstripped/{{target_output_name}}{{output_extension}}"
    command = "$ld -shared {{ldflags}} -o \"$unstripped_outfile\" -Wl,-soname=\"$outname\" @\"$rspfile\""
    rspfile_content = "-Wl,--whole-archive {{inputs}} {{solibs}} -Wl,--no-whole-archive {{libs}}"
    default_output_extension = ".so"
    command += " && $strip -s -o \"$outfile\" \"$unstripped_outfile\""
    description = "SOLINK $outfile"
    default_output_dir = "{{root_out_dir}}"
    output_prefix = "lib"
    outputs = [
      outfile,
      unstripped_outfile,
    ]
  }

  tool("solink_module") {
    outname = "{{target_output_name}}{{output_extension}}"
    outfile = "{{output_dir}}/$outname"
    rspfile = "$outfile.rsp"
    unstripped_outfile = "{{root_out_dir}}/lib.unstripped/{{target_output_name}}{{output_extension}}"
    command = "$ld -shared {{ldflags}} -o \"$unstripped_outfile\" -Wl,-soname=\"$outname\" @\"$rspfile\""
    rspfile_content = "-Wl,--whole-archive {{inputs}} {{solibs}} -Wl,--no-whole-archive {{libs}}"
    default_output_extension = ".so"
    command += " && $strip -s -o \"$outfile\" \"$unstripped_outfile\""
    description = "SOLINK $outfile"
    default_output_dir = "{{root_out_dir}}"
    output_prefix = "lib"
    outputs = [
      outfile,
      unstripped_outfile,
    ]
  }

  tool("link") {
    outfile = "{{output_dir}}/{{target_output_name}}{{output_extension}}"
    rspfile = "$outfile.rsp"
    unstripped_outfile = "{{root_out_dir}}/exe.unstripped/{{target_output_name}}{{output_extension}}"
    command = "$ld {{ldflags}} -o \"$unstripped_outfile\" -Wl,--start-group @\"$rspfile\" {{solibs}} -Wl,--end-group {{libs}}"
    rspfile_content = "{{inputs}}"
    command += " && $strip -s -o \"$outfile\" \"$unstripped_outfile\""
    description = "LINK $outfile"
    default_output_dir = "{{root_out_dir}}"
    outputs = [
      outfile,
      unstripped_outfile,
    ]
  }

  tool("stamp") {
    command = "touch {{output}}"
    description = "STAMP {{output}}"
  }

  tool("copy") {
    command = "cp -af {{source}} {{output}}"
    description = "COPY {{source}} {{output}}"
  }
}
